package com.agac.gui;

import com.agac.anexo20.CadenaOriginal;
import com.agac.anexo20.SelloDigital;
import com.agac.bo.Articulo;
import com.agac.bo.ArticuloPK;
import com.agac.bo.Comprobante;
import com.agac.bo.Concepto;
import com.agac.bo.Receptor;
import com.agac.bo.Impuesto;
import com.agac.bo.Traslado;
import com.agac.bo.InformacionAduanera;
import com.agac.bo.Serie;
import com.agac.gui.nodes.ClienteNode;
import com.agac.gui.resourses.TripleDES;
import com.agac.services.DbServices;
import java.awt.Color;
import java.awt.Font;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.dnd.DnDConstants;
import java.awt.dnd.DropTarget;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetEvent;
import java.awt.dnd.DropTargetListener;
import java.awt.event.KeyEvent;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.IOException;
import java.io.InputStream;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.TooManyListenersException;
import java.util.TreeMap;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.logging.Logger;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.beansbinding.Converter;
import org.netbeans.api.progress.ProgressUtils;
import org.openide.util.Exceptions;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.NotifyDescriptor.Confirmation;
import org.openide.cookies.PrintCookie;
import org.openide.cookies.SaveCookie;
import org.openide.nodes.AbstractNode;
import org.openide.nodes.Children;
import org.openide.nodes.Node;
import org.openide.util.ImageUtilities;
import org.openide.util.NbPreferences;

@ConvertAsProperties(dtd = "-//com.agac.gui//Comprobante//EN",
autostore = false)
public final class ComprobanteTopComponent extends TopComponent {

    private static ComprobanteTopComponent instance;
    /** path to the icon used by the component and its open action */
    static final String ICON_PATH = "com/agac/gui/resourses/package.png";
    private static final String PREFERRED_ID = "ComprobanteTopComponent";
    private boolean isNew = true;
    private static Color ColorBotonTrue = Color.blue;
    private static Color ColorBotonFalse = Color.black;

    public void setIsNew(boolean val) {
        isNew = val;
    }

    public ComprobanteTopComponent() {
        initComponents();

        txtParcialidad.getDocument().addDocumentListener(listenParcial);
        txtParcialidadTotales.getDocument().addDocumentListener(listenParcialTotal);
        txtDescImporte.getDocument().addDocumentListener(listenDescuento);

        setName(NbBundle.getMessage(ComprobanteTopComponent.class, "CTL_ComprobanteTopComponent"));
        setToolTipText(NbBundle.getMessage(ComprobanteTopComponent.class, "HINT_ComprobanteTopComponent"));
        setIcon(ImageUtilities.loadImage(ICON_PATH, true));

        putClientProperty(TopComponent.PROP_UNDOCKING_DISABLED, Boolean.TRUE);

        DropTarget dp = new DropTarget();
        try {
            dp.addDropTargetListener(new ClienteDrop());
        } catch (TooManyListenersException ex) {
            Exceptions.printStackTrace(ex);
        }
        jPanel1.setDropTarget(dp);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(250);

        // Listeners para cambio de opciones del sistema


        pref.addPreferenceChangeListener(new PreferenceChangeListener() {

            @Override
            public void preferenceChange(PreferenceChangeEvent evt) {
                if (evt.getKey().equals("IVA")) {
                    IVAdefault = Double.parseDouble(evt.getNewValue());
                }
                if (evt.getKey().equals("REPORTE")) {
                    layout = evt.getNewValue();
                }
            }
        });




    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        btnGrpConceptos = new javax.swing.ButtonGroup();
        btnGrpFormaPago = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNoExt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNoInt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtLocalidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtMunicipio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPais = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCP = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        txtColonia = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cboUnidad = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        btnPartes = new javax.swing.JButton();
        btnInfoAduanera = new javax.swing.JButton();
        btnCtaPredial = new javax.swing.JButton();
        btnAddConcepto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnImpuestos = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCatalogo = new javax.swing.JButton();
        cmbIvaTraslado = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        TabOpciones = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSello = new javax.swing.JTextArea();
        lblVersion = new javax.swing.JLabel();
        lblFecha = new javax.swing.JLabel();
        lblNoAprobacion = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lblNoCertificado = new javax.swing.JLabel();
        cmbSeries = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        lblDe = new javax.swing.JLabel();
        optUnPago = new javax.swing.JRadioButton();
        optParcial = new javax.swing.JRadioButton();
        txtParcialidad = new javax.swing.JTextField();
        txtParcialidadTotales = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        chkCondiciones = new javax.swing.JCheckBox();
        chkDescuento = new javax.swing.JCheckBox();
        txtDescImporte = new javax.swing.JTextField();
        cboMotivoDesc = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        lblSubtotal = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        lblDescuento = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        lblIVA = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jScrollPane3.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(0, 0));

        jPanel5.setMaximumSize(new java.awt.Dimension(1000, 1000));
        jPanel5.setMinimumSize(new java.awt.Dimension(50, 84));
        jPanel5.setPreferredSize(new java.awt.Dimension(950, 800));
        jPanel5.setLayout(null);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel1.border.title"))); // NOI18N
        jPanel1.setMaximumSize(new java.awt.Dimension(803, 300));
        jPanel1.setName("pnlReceptor"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(0, 235));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel1.text")); // NOI18N

        txtRazonSocial.setEditable(false);
        txtRazonSocial.setFont(new java.awt.Font("Tahoma", 1, 11));
        txtRazonSocial.setMaximumSize(new java.awt.Dimension(300, 20));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.nombre}"), txtRazonSocial, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel2.text")); // NOI18N

        txtCalle.setEditable(false);
        txtCalle.setMaximumSize(new java.awt.Dimension(200, 20));
        txtCalle.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.calle}"), txtCalle, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel3.text")); // NOI18N

        txtNoExt.setEditable(false);
        txtNoExt.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.noExterior}"), txtNoExt, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel4.text")); // NOI18N

        txtNoInt.setEditable(false);
        txtNoInt.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.noInterior}"), txtNoInt, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel6.text")); // NOI18N

        txtLocalidad.setEditable(false);
        txtLocalidad.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.localidad}"), txtLocalidad, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel7.text")); // NOI18N

        txtMunicipio.setEditable(false);
        txtMunicipio.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.municipio}"), txtMunicipio, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel8.text")); // NOI18N

        txtEstado.setEditable(false);
        txtEstado.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.estado}"), txtEstado, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel9.text")); // NOI18N

        txtPais.setEditable(false);
        txtPais.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.pais}"), txtPais, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel10.text")); // NOI18N

        txtCP.setColumns(5);
        txtCP.setEditable(false);
        txtCP.setMaximumSize(new java.awt.Dimension(200, 20));
        txtCP.setName(""); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.codigoPostal}"), txtCP, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel11.text")); // NOI18N

        txtRFC.setEditable(false);
        txtRFC.setFont(new java.awt.Font("Tahoma", 1, 11));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.rfc}"), txtRFC, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txtColonia.setEditable(false);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.receptor.domicilio.colonia}"), txtColonia, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/find.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton5, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jButton5.text")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 638, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                                    .addComponent(txtCalle, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCP, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtMunicipio, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                    .addComponent(txtColonia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(601, 601, 601)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)))
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRazonSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRFC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNoInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtNoExt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(txtCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        txtCalle.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField2.AccessibleContext.accessibleName")); // NOI18N
        txtNoExt.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField3.AccessibleContext.accessibleName")); // NOI18N
        txtNoInt.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField4.AccessibleContext.accessibleName")); // NOI18N
        txtLocalidad.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField6.AccessibleContext.accessibleName")); // NOI18N
        txtMunicipio.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField7.AccessibleContext.accessibleName")); // NOI18N
        txtEstado.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField8.AccessibleContext.accessibleName")); // NOI18N
        txtPais.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField9.AccessibleContext.accessibleName")); // NOI18N
        txtCP.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jTextField10.AccessibleContext.accessibleName")); // NOI18N

        jPanel5.add(jPanel1);
        jPanel1.setBounds(0, 48, 820, 190);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel2.border.title"))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(800, 300));
        jPanel2.setPreferredSize(new java.awt.Dimension(0, 0));

        jLabel12.setLabelFor(txtCantidad);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel12.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${concepto.cantidad}"), txtCantidad, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel13.setLabelFor(cboUnidad);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel13.text")); // NOI18N

        cboUnidad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pieza", "Caja", "Consumo", "Gramos", "Kilos", "Litros", "Mililitros", "Paquete", "Servicio" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${concepto.unidad}"), cboUnidad, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel14.setLabelFor(txtIdentificador);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel14.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${concepto.noIdentificacion}"), txtIdentificador, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txtIdentificador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdentificadorKeyPressed(evt);
            }
        });

        jLabel15.setLabelFor(txtDescripcion);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel15, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel15.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${concepto.descripcion}"), txtDescripcion, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel16.setLabelFor(txtPrecio);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel16, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel16.text")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${concepto.valorUnitario}"), txtPrecio, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.openide.awt.Mnemonics.setLocalizedText(btnPartes, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnPartes.text")); // NOI18N
        btnPartes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPartesActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnInfoAduanera, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnInfoAduanera.text")); // NOI18N
        btnInfoAduanera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfoAduaneraActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btnCtaPredial, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnCtaPredial.text")); // NOI18N

        btnAddConcepto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/add.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnAddConcepto, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnAddConcepto.text")); // NOI18N
        btnAddConcepto.setMaximumSize(new java.awt.Dimension(49, 20));
        btnAddConcepto.setMinimumSize(new java.awt.Dimension(49, 20));
        btnAddConcepto.setPreferredSize(new java.awt.Dimension(49, 20));
        btnAddConcepto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddConceptoActionPerformed(evt);
            }
        });
        btnAddConcepto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddConceptoKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cantidad", "Unidad", "Identificador", "Descripción", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTable1KeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        btnImpuestos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/money_add.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnImpuestos, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnImpuestos.text")); // NOI18N
        btnImpuestos.setToolTipText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnImpuestos.toolTipText")); // NOI18N
        btnImpuestos.setEnabled(false);
        btnImpuestos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImpuestosActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/pencil.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnEditar, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnEditar.text")); // NOI18N
        btnEditar.setToolTipText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnEditar.toolTipText")); // NOI18N
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/delete.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnEliminar, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnEliminar.text")); // NOI18N
        btnEliminar.setToolTipText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnEliminar.toolTipText")); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCatalogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/agac/gui/resourses/find.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnCatalogo, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.btnCatalogo.text")); // NOI18N
        btnCatalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCatalogoActionPerformed(evt);
            }
        });

        cmbIvaTraslado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "16%", "11%", "0" }));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel26, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel26.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel13)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel14)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel15)
                        .addGap(214, 214, 214)
                        .addComponent(jLabel26)
                        .addGap(70, 70, 70)
                        .addComponent(jLabel16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(cmbIvaTraslado, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAddConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnPartes)
                        .addGap(6, 6, 6)
                        .addComponent(btnInfoAduanera)
                        .addGap(6, 6, 6)
                        .addComponent(btnCtaPredial))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImpuestos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel26)
                    .addComponent(jLabel16))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCatalogo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbIvaTraslado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAddConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPartes)
                    .addComponent(btnInfoAduanera)
                    .addComponent(btnCtaPredial))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnEditar)
                        .addGap(25, 25, 25)
                        .addComponent(btnEliminar)
                        .addGap(15, 15, 15)
                        .addComponent(btnImpuestos))))
        );

        jPanel5.add(jPanel2);
        jPanel2.setBounds(0, 243, 820, 263);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.emisor.nombre}"), jLabel17, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel5.add(jLabel17);
        jLabel17.setBounds(10, 20, 801, 22);

        TabOpciones.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        TabOpciones.setMaximumSize(new java.awt.Dimension(500, 500));
        TabOpciones.setPreferredSize(new java.awt.Dimension(0, 0));

        org.openide.awt.Mnemonics.setLocalizedText(jLabel18, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel18.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel19, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel19.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel20, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel20.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel21, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel21.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel22, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel22.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel23, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel23.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel24, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel24.text")); // NOI18N

        txtSello.setColumns(20);
        txtSello.setEditable(false);
        txtSello.setFont(new java.awt.Font("Monospaced", 0, 10));
        txtSello.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.sello}"), txtSello, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(txtSello);

        lblVersion.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(lblVersion, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.lblVersion.text")); // NOI18N

        lblFecha.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        lblFecha.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.folio}"), lblFecha, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblNoAprobacion.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        lblNoAprobacion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.fecha}"), lblNoAprobacion, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(getConverter());
        bindingGroup.addBinding(binding);

        jLabel25.setFont(new java.awt.Font("DejaVu Sans", 1, 11));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cmbSeries, org.jdesktop.beansbinding.ELProperty.create("${selectedItem.anoAprob}"), jLabel25, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lblNoCertificado.setFont(new java.awt.Font("DejaVu Sans", 1, 11));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cmbSeries, org.jdesktop.beansbinding.ELProperty.create("${selectedItem.numAutorización}"), lblNoCertificado, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${comprobante.emisor.series}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, cmbSeries);
        bindingGroup.addBinding(jComboBoxBinding);

        cmbSeries.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSeriesItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblNoAprobacion)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbSeries, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVersion))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNoCertificado, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblVersion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cmbSeries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblFecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(lblNoAprobacion)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNoCertificado)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        TabOpciones.addTab(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lblDe, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.lblDe.text")); // NOI18N

        btnGrpFormaPago.add(optUnPago);
        optUnPago.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(optUnPago, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.optUnPago.text")); // NOI18N
        optUnPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optUnPagoActionPerformed(evt);
            }
        });

        btnGrpFormaPago.add(optParcial);
        org.openide.awt.Mnemonics.setLocalizedText(optParcial, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.optParcial.text")); // NOI18N
        optParcial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optParcialActionPerformed(evt);
            }
        });

        txtParcialidad.setText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.txtParcialidad.text")); // NOI18N
        txtParcialidad.setEnabled(false);
        txtParcialidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtParcialidadFocusLost(evt);
            }
        });

        txtParcialidadTotales.setText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.txtParcialidadTotales.text")); // NOI18N
        txtParcialidadTotales.setEnabled(false);
        txtParcialidadTotales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtParcialidadTotalesFocusLost(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(chkCondiciones, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.chkCondiciones.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkDescuento, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.chkDescuento.text")); // NOI18N
        chkDescuento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDescuentoActionPerformed(evt);
            }
        });

        txtDescImporte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescImporte.setText(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.txtDescImporte.text")); // NOI18N
        txtDescImporte.setEnabled(false);
        txtDescImporte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescImporteFocusLost(evt);
            }
        });

        cboMotivoDesc.setEditable(true);
        cboMotivoDesc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Indique motivo de descuento ..." }));
        cboMotivoDesc.setEnabled(false);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel30, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel30.text")); // NOI18N

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Efectivo", "Cheque", "Tarjeta de Crédito/Débito", "Deposito en cuenta" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(optUnPago)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optParcial)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtParcialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(lblDe)
                        .addGap(18, 18, 18)
                        .addComponent(txtParcialidadTotales, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkDescuento)
                                    .addComponent(jLabel30))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(txtDescImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboMotivoDesc, 0, 268, Short.MAX_VALUE))
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(chkCondiciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(390, 390, 390)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(optUnPago)
                    .addComponent(optParcial)
                    .addComponent(txtParcialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDe)
                    .addComponent(txtParcialidadTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(chkCondiciones))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, 0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboMotivoDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDescuento)
                    .addComponent(txtDescImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );

        TabOpciones.addTab(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel8.TabConstraints.tabTitle"), jPanel8); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 569, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        TabOpciones.addTab(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel6.TabConstraints.tabTitle"), jPanel6); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 569, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );

        TabOpciones.addTab(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel7.TabConstraints.tabTitle"), jPanel7); // NOI18N

        jPanel5.add(TabOpciones);
        TabOpciones.setBounds(0, 548, 574, 235);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jPanel3.border.title"))); // NOI18N

        jLabel28.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel28, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel28.text")); // NOI18N

        jLabel29.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel29, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel29.text")); // NOI18N

        lblSubtotal.setBackground(new java.awt.Color(0, 0, 255));
        lblSubtotal.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        lblSubtotal.setForeground(new java.awt.Color(255, 255, 255));
        lblSubtotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSubtotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblSubtotal.setOpaque(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.subTotal}"), lblSubtotal, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel31.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel31, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel31.text")); // NOI18N

        lblDescuento.setBackground(new java.awt.Color(0, 0, 255));
        lblDescuento.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        lblDescuento.setForeground(new java.awt.Color(255, 255, 255));
        lblDescuento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDescuento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblDescuento.setOpaque(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.descuento}"), lblDescuento, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel32.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        org.openide.awt.Mnemonics.setLocalizedText(jLabel32, org.openide.util.NbBundle.getMessage(ComprobanteTopComponent.class, "ComprobanteTopComponent.jLabel32.text")); // NOI18N

        lblIVA.setBackground(new java.awt.Color(0, 0, 255));
        lblIVA.setFont(new java.awt.Font("DejaVu Sans", 1, 11));
        lblIVA.setForeground(new java.awt.Color(255, 255, 255));
        lblIVA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblIVA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblIVA.setOpaque(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.IVA}"), lblIVA, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setPreferredSize(new java.awt.Dimension(0, 20));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${comprobante.total}"), jLabel33, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblDescuento, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                            .addComponent(lblSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                        .addGap(21, 21, 21))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIVA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblDescuento, lblIVA, lblSubtotal});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(lblSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(lblDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(lblIVA))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblDescuento, lblIVA, lblSubtotal});

        jPanel5.add(jPanel3);
        jPanel3.setBounds(580, 634, 234, 149);

        jScrollPane3.setViewportView(jPanel5);

        add(jScrollPane3, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddConceptoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddConceptoKeyPressed
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            jButton4ActionPerformed(null);
//        }
    }//GEN-LAST:event_btnAddConceptoKeyPressed

    private void btnAddConceptoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddConceptoActionPerformed

        try {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.addRow(new Object[]{concepto.getCantidad(), concepto.getUnidad(),
                        concepto.getNoIdentificacion(), concepto.getDescripcion(),
                        concepto.getValorUnitario(), concepto.getImporte()});
            comprobante.addConcepto(concepto);

            setConcepto(new Concepto());
            txtCantidad.setText("");
            txtDescripcion.setText("");
            txtIdentificador.setText("");
            txtPrecio.setText("");
            txtCantidad.requestFocus();
            NumberFormat nf = NumberFormat.getCurrencyInstance();
            comprobante.setSubTotal(comprobante.calcularSubTotal());
            lblSubtotal.setText(nf.format(comprobante.getSubTotal().doubleValue()));
            double iva = 0;
            if(cmbIvaTraslado.getSelectedItem().toString().equals("0")){
                iva = Double.parseDouble(cmbIvaTraslado.getSelectedItem().toString());
            }else{
                iva = Double.parseDouble(cmbIvaTraslado.getSelectedItem().toString().substring(0, 2));
            }
            iva /= 100;
            refrescaIva(iva);
            comprobante.setTotal(comprobante.calcularTotal());
            jLabel33.setText(nf.format(comprobante.getTotal().doubleValue()));


        } catch (Exception ex) {
            Exception e = new Exception("No se pudo agregar el concepto, verifique los datos");
            NotifyDescriptor n = new NotifyDescriptor.Exception(e);
            DialogDisplayer.getDefault().notify(n);
        }
    }//GEN-LAST:event_btnAddConceptoActionPerformed

    private void btnPartesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPartesActionPerformed
        PartesPanel pp = new PartesPanel();
        pp.setConcepto(concepto);
        DialogDescriptor dd = new DialogDescriptor(pp, "Partes", true, null);
        Object result = DialogDisplayer.getDefault().notify(dd);
        if (NotifyDescriptor.OK_OPTION.equals(result)) {
            txtCantidad.setText(Integer.toString(1));
            txtDescripcion.setText("Multiples Partes ...");
            txtPrecio.setText(concepto.getTotalPartes().toString());
        }
    }//GEN-LAST:event_btnPartesActionPerformed

    private void btnInfoAduaneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfoAduaneraActionPerformed
        List<InformacionAduanera> infoAduanera = new ArrayList<InformacionAduanera>();
        if (concepto.getInfoAduanera() != null) {
            infoAduanera.addAll(concepto.getInfoAduanera());
        }
        InformacionAduaneraPanel infPanel = new InformacionAduaneraPanel();
        infPanel.setInfoAduaneraList(infoAduanera);
        DialogDescriptor dd = new DialogDescriptor(infPanel,
                "Información Aduanera", true, null);
        Object result = DialogDisplayer.getDefault().notify(dd);
        if (NotifyDescriptor.OK_OPTION.equals(result)) {
            concepto.setInfoAduanera(infoAduanera);
        }
    }//GEN-LAST:event_btnInfoAduaneraActionPerformed

    private void btnImpuestosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImpuestosActionPerformed
        ImpuestosPanel impPanel = new ImpuestosPanel(this.getComprobante());
        DialogDescriptor d2 = new DialogDescriptor(impPanel, "Impuestos", true, null);
        //DialogDisplayer.getDefault().notify(d2);
        //comprobante.setImpuesto(impPanel.getImpuesto());
        Object result = DialogDisplayer.getDefault().notify(d2);
        if (DialogDescriptor.OK_OPTION.equals(result)) {
            //comprobante.setImpuesto(impPanel.getImpuesto());
        }
        //refrescaImpuestos();
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        lblIVA.setText(nf.format(comprobante.getIVA()));
        jLabel33.setText(nf.format(comprobante.getTotal()));
    }//GEN-LAST:event_btnImpuestosActionPerformed

    private void optUnPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optUnPagoActionPerformed
        // TODO add your handling code here:

        if (optUnPago.isSelected()) {
            txtParcialidad.setEnabled(false);
            txtParcialidadTotales.setEnabled(false);
        } else {
            txtParcialidad.setEnabled(true);
            txtParcialidadTotales.setEnabled(true);
        }

    }//GEN-LAST:event_optUnPagoActionPerformed

    private void optParcialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optParcialActionPerformed
        // TODO add your handling code here:
        if (optUnPago.isSelected()) {
            txtParcialidad.setEnabled(false);
            txtParcialidadTotales.setEnabled(false);
        } else {
            txtParcialidad.setEnabled(true);
            txtParcialidadTotales.setEnabled(true);
        }
        //firePropertyChange(null, null, null);

    }//GEN-LAST:event_optParcialActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        BuscarClienteForm frm = new BuscarClienteForm();
        DialogDescriptor dd = new DialogDescriptor(frm, "Partes", true, null);
        Object result = DialogDisplayer.getDefault().notify(dd);
        if (NotifyDescriptor.OK_OPTION.equals(result)) {
            comprobante.setReceptor(frm.getReceptor());
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cmbSeriesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSeriesItemStateChanged
        if (!isNew) {
            return;
        }
        Serie serie = (Serie) cmbSeries.getSelectedItem();
        if (serie != null) {
            int folio = DbServices.getSiguienteFolio(comprobante.getEmisor(), serie);

            if (folio > serie.getFolioFinal().intValue()) {
                DialogDisplayer.getDefault().notify(new NotifyDescriptor.Message("Ya no hay mas folios para esta serie", NotifyDescriptor.ERROR_MESSAGE));
                return;
            }
            comprobante.setFolio(folio);
            comprobante.setSerie(serie.getNumSerie());
            comprobante.setAnoAprobacion(serie.getAnoAprob());
            comprobante.setNoAprobacion(Integer.parseInt(serie.getNumAutorización()));
        }
    }//GEN-LAST:event_cmbSeriesItemStateChanged

    private void txtDescImporteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescImporteFocusLost

        listenDescuento.insertUpdate(null);
    }//GEN-LAST:event_txtDescImporteFocusLost

    private void txtParcialidadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtParcialidadFocusLost

        listenParcial.insertUpdate(null);
    }//GEN-LAST:event_txtParcialidadFocusLost

    private void txtParcialidadTotalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtParcialidadTotalesFocusLost

        listenParcialTotal.insertUpdate(null);
    }//GEN-LAST:event_txtParcialidadTotalesFocusLost

    private void chkDescuentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDescuentoActionPerformed
        // TODO add your handling code here:
        if (chkDescuento.isSelected()) {
            txtDescImporte.setEnabled(true);
            cboMotivoDesc.setEnabled(true);
        } else {
            txtDescImporte.setEnabled(false);
            cboMotivoDesc.setEnabled(false);
        }
    }//GEN-LAST:event_chkDescuentoActionPerformed

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
    }//GEN-LAST:event_jTable1PropertyChange

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
    }//GEN-LAST:event_jTable1InputMethodTextChanged

    private void txtIdentificadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificadorKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            Articulo a = DbServices.find(
                    Articulo.class, new ArticuloPK(txtIdentificador.getText(), comprobante.getEmisor().getId()));
            if (a != null) {
                txtDescripcion.setText(a.getDescripcion());
                txtPrecio.setText(a.getPrecio().toString());
            }
        }
    }//GEN-LAST:event_txtIdentificadorKeyPressed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (comprobante.getStatus() != 0 || isNew) {
            Confirmation msg = new NotifyDescriptor.Confirmation(
                    "Está seguro de eliminar el concepto?\nLa operación será definitiva hasta que se guarden los cambios", "Confirmar Eliminación",
                    NotifyDescriptor.OK_CANCEL_OPTION,
                    NotifyDescriptor.QUESTION_MESSAGE);
            Object result = DialogDisplayer.getDefault().notify(msg);
            if (NotifyDescriptor.YES_OPTION.equals(result)) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                int posicion = jTable1.getSelectedRow();
                if (posicion >= 0) {
                    for (int c = 0; c < jTable1.getRowCount(); c++) {
                        if (c == posicion) {
                            model.removeRow(c);
                        }
                    }
                    comprobante.getConceptos().remove(posicion);
                    //refrescaIva();
                    saveNode.enableSave(true);
                }
            } //if confirm
        } // if activo
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCatalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCatalogoActionPerformed

        BuscarArticuloForm frm = new BuscarArticuloForm();
        DialogDescriptor dd = new DialogDescriptor(frm, "Partes", true, null);
        Object result = DialogDisplayer.getDefault().notify(dd);
        if (NotifyDescriptor.OK_OPTION.equals(result)) {



            this.txtIdentificador.setText(frm.getArticulo().getId().getIdentificador());
            this.txtDescripcion.setText(frm.getArticulo().getDescripcion());
            this.txtPrecio.setText(frm.getArticulo().getPrecio().toString());
            this.cboUnidad.requestFocus();
            //comprobante.setReceptor(frm.getReceptor());
        }

    }//GEN-LAST:event_btnCatalogoActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        if (isNew || comprobante.getStatus() == 1) {
            System.out.println("M " + jTable1.getSelectedRow());
            this.pintaBoton(comprobante.getConceptos().get(jTable1.getSelectedRow()));
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyTyped
    }//GEN-LAST:event_jTable1KeyTyped

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
    }//GEN-LAST:event_jTable1KeyPressed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (jTable1.getSelectedRow() != -1) {


            // Llenamos componentes con valores del objeto

            this.txtCantidad.setText(String.valueOf(comprobante.getConceptos().get(jTable1.getSelectedRow()).getCantidad()));
            this.txtIdentificador.setText(String.valueOf(comprobante.getConceptos().get(jTable1.getSelectedRow()).getId()));
            //this.cboUnidad
            this.txtDescripcion.setText(comprobante.getConceptos().get(jTable1.getSelectedRow()).getDescripcion());
            this.txtPrecio.setText(comprobante.getConceptos().get(jTable1.getSelectedRow()).getValorUnitario().toString());

        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased

        if (isNew || comprobante.getStatus() == 1) {
            System.out.println("K " + jTable1.getSelectedRow());
            this.pintaBoton(comprobante.getConceptos().get(jTable1.getSelectedRow()));
        }
    }//GEN-LAST:event_jTable1KeyReleased
    // <editor-fold defaultstate="collapsed" desc="Variables de Instancia">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabOpciones;
    private javax.swing.JButton btnAddConcepto;
    private javax.swing.JButton btnCatalogo;
    private javax.swing.JButton btnCtaPredial;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.ButtonGroup btnGrpConceptos;
    private javax.swing.ButtonGroup btnGrpFormaPago;
    private javax.swing.JButton btnImpuestos;
    private javax.swing.JButton btnInfoAduanera;
    private javax.swing.JButton btnPartes;
    private javax.swing.JComboBox cboMotivoDesc;
    private javax.swing.JComboBox cboUnidad;
    private javax.swing.JCheckBox chkCondiciones;
    private javax.swing.JCheckBox chkDescuento;
    private javax.swing.JComboBox cmbIvaTraslado;
    private javax.swing.JComboBox cmbSeries;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lblDe;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblIVA;
    private javax.swing.JLabel lblNoAprobacion;
    private javax.swing.JLabel lblNoCertificado;
    private javax.swing.JLabel lblSubtotal;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JRadioButton optParcial;
    private javax.swing.JRadioButton optUnPago;
    private javax.swing.JTextField txtCP;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtColonia;
    private javax.swing.JTextField txtDescImporte;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtIdentificador;
    private javax.swing.JTextField txtLocalidad;
    private javax.swing.JTextField txtMunicipio;
    private javax.swing.JTextField txtNoExt;
    private javax.swing.JTextField txtNoInt;
    private javax.swing.JTextField txtPais;
    private javax.swing.JTextField txtParcialidad;
    private javax.swing.JTextField txtParcialidadTotales;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextArea txtSello;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
// </editor-fold>

    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized ComprobanteTopComponent getDefault() {
        if (instance == null) {
            instance = new ComprobanteTopComponent();
        }
        return instance;
    }

    /**
     * Obtain the ComprobanteTopComponent instance. Never call {@link #getDefault} directly!
     */
    public static synchronized ComprobanteTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) {
            Logger.getLogger(ComprobanteTopComponent.class.getName()).warning(
                    "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
            return getDefault();
        }
        if (win instanceof ComprobanteTopComponent) {
            return (ComprobanteTopComponent) win;
        }
        Logger.getLogger(ComprobanteTopComponent.class.getName()).warning(
                "There seem to be multiple components with the '" + PREFERRED_ID
                + "' ID. That is a potential source of errors and unexpected behavior.");
        return getDefault();
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_NEVER;
    }

    @Override
    public void componentOpened() {
        comprobante.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (validaCampos() && (isNew || comprobante.getStatus() == 1)) {
                    saveNode.enableSave(true);
                }
            }
        });
        //if(!isNew && comprobante.getStatus()== 0) saveNode.enableSave(false);
        setActivatedNodes(new Node[]{saveNode = new NodeForSave()});

    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    Object readProperties(java.util.Properties p) {
        ComprobanteTopComponent singleton = ComprobanteTopComponent.getDefault();
        singleton.readPropertiesImpl(p);
        return singleton;
    }

    public Converter getConverter() {
        return new Converter() {

            @Override
            public Object convertForward(Object value) {
                return value.toString();
            }

            @Override
            public Object convertReverse(Object value) {
                try {
                    return new java.sql.Date(((java.util.Date) value).getTime());
                } catch (Exception e) {
                    return null;
                }
            }
        };
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    // <editor-fold defaultstate="collapsed" desc="Cliente DnD">
    private class ClienteDrop implements DropTargetListener {

        @Override
        public void dragEnter(DropTargetDragEvent dtde) {
            dtde.acceptDrag(DnDConstants.ACTION_COPY_OR_MOVE);
        }

        @Override
        public void dragOver(DropTargetDragEvent dtde) {
        }

        @Override
        public void dropActionChanged(DropTargetDragEvent dtde) {
        }

        @Override
        public void dragExit(DropTargetEvent dte) {
        }

        @Override
        public void drop(DropTargetDropEvent dtde) {
            Transferable t = dtde.getTransferable();
            if (t.isDataFlavorSupported(ClienteNode.DATA_FLAVOR)) {
                try {
                    dtde.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);
                    Receptor r = (Receptor) t.getTransferData(ClienteNode.DATA_FLAVOR);
                    comprobante.setReceptor(r);
                    dtde.getDropTargetContext().dropComplete(true);
                } catch (UnsupportedFlavorException ex) {
                    Exceptions.printStackTrace(ex);
                } catch (IOException ex) {
                    Exceptions.printStackTrace(ex);
                }
            }
        }
    }
    //</editor-fold>
    private Comprobante comprobante = new Comprobante();

    public Comprobante getComprobante() {
        return comprobante;
    }
    Preferences pref = NbPreferences.forModule(OpcionesdelSistemaPanel.class);
    double IVAdefault = Double.parseDouble(pref.get("IVA", "0.0"));
    String layout = pref.get("REPORTE", "reporte.jasper");

    public void setComprobante(Comprobante comprobante) {
        this.comprobante = comprobante;
        if (comprobante.getConceptos() != null && !comprobante.getConceptos().isEmpty()) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (Concepto con : comprobante.getConceptos()) {
                model.addRow(new Object[]{con.getCantidad(), con.getUnidad(),
                            con.getNoIdentificacion(), con.getDescripcion(),
                            con.getValorUnitario(), con.getImporte()});
            }
        }
        firePropertyChange("comprobante", null, comprobante);
    }
    private Concepto concepto = new Concepto();

    public Concepto getConcepto() {
        return concepto;
    }

    public void setConcepto(Concepto concepto) {
        this.concepto = concepto;

        firePropertyChange("concepto", null, concepto);
        //refrescaImpuestos();
    }
    private Impuesto impuesto = new Impuesto();

    public Impuesto getImpuesto() {
        return impuesto;
    }

    public void setImpuesto(Impuesto impuesto) {
        this.impuesto = impuesto;
    }
    private NodeForSave saveNode;

    public void enablePrint() {
        saveNode.enablePrint(true);
    }

    // <editor-fold defaultstate="collapsed" desc="Node For Save & Print">
    private class NodeForSave extends AbstractNode {

        SaveCookieImpl impl;
        PrintCookieImpl pImpl;

        public NodeForSave() {
            super(Children.LEAF);
            impl = new SaveCookieImpl();
            pImpl = new PrintCookieImpl();
            getCookieSet().assign(SaveCookie.class);
        }

        public void enableSave(boolean modified) {
            if (modified) {
                getCookieSet().assign(SaveCookie.class, impl);
            } else {
                getCookieSet().assign(SaveCookie.class);
            }
        }

        public void enablePrint(boolean modified) {
            if (modified) {
                getCookieSet().assign(PrintCookie.class, pImpl);
            } else {
                getCookieSet().assign(PrintCookie.class);
            }
        }

        private class SaveCookieImpl implements SaveCookie {

            @Override
            public void save() throws IOException {
                if (validaCampos()) {
                    Confirmation msg = new NotifyDescriptor.Confirmation(
                            "¿Desea guardar los cambios?", "Guardar Cambios",
                            NotifyDescriptor.OK_CANCEL_OPTION,
                            NotifyDescriptor.QUESTION_MESSAGE);
                    Object result = DialogDisplayer.getDefault().notify(msg);
                    if (NotifyDescriptor.YES_OPTION.equals(result)) {

                        try {
                            ProgressUtils.runOffEventDispatchThread(
                                    new Runnable() {

                                        @Override
                                        public void run() {
                                            try {

                                                if (optUnPago.isSelected()) {
                                                    comprobante.setFormaDePago("Pago en una sola exibicion");
                                                } else {
                                                    comprobante.setFormaDePago("Parcialidad " + txtParcialidad.getText() + " de " + txtParcialidadTotales.getText());
                                                }
                                                String cadena = new CadenaOriginal(comprobante).toString();
                                                System.out.println(cadena);
                                                SelloDigital sd = new SelloDigital();
                                                sd.cargarLlavePrivada(
                                                        comprobante.getEmisor().getRutaLlave(),
                                                        new TripleDES().desencriptar(
                                                        comprobante.getEmisor().getPasswd()));
                                                sd.cargarLlavePublicaDeCertificado(comprobante.getEmisor().getRutaCertificado());
                                                comprobante.setNoCertificado(sd.getSerialNumberSATFormat());
                                                comprobante.setSello(sd.generar(cadena));
                                                comprobante.setCadenaOriginal(cadena);

                                                //status 1 = activo, 0 = cancelado
                                                comprobante.setStatus(1);

                                                comprobante = DbServices.saveObject(comprobante, true);
                                                DbServices.ActualizaEmitidos();
                                                comprobante.addPropertyChangeListener(new PropertyChangeListener() {

                                                    @Override
                                                    public void propertyChange(PropertyChangeEvent evt) {
                                                        saveNode.enableSave(true);
                                                    }
                                                });
                                                System.out.println(cadena);
                                                isNew = false;
                                            } catch (Exception e) {
                                                Exceptions.printStackTrace(e);
                                            }
                                        }
                                    }, "Guardando Datos", new AtomicBoolean(false), true);
                            ((MenuTopComponent) WindowManager.getDefault().findTopComponent(
                                    "MenuTopComponent")).refreshNode();
                            enableSave(false);
                            enablePrint(true);

                        } catch (Exception ex) {
                            Exceptions.printStackTrace(ex);
                        } finally {
                        }
                    }
                } else {
                    NotifyDescriptor msg = new NotifyDescriptor.Message("Verifique la información, podría tener formato incorrecto", NotifyDescriptor.WARNING_MESSAGE);
                    Object result = DialogDisplayer.getDefault().notify(msg);
                }

            } // save
        } //saveCooki

        private class PrintCookieImpl implements PrintCookie {

            @Override
            public void print() {


                DialogDisplayer.getDefault().notify(new NotifyDescriptor.Confirmation(
                        "¿Desea imprimir la factura?", "Impresión",
                        NotifyDescriptor.OK_CANCEL_OPTION,
                        NotifyDescriptor.QUESTION_MESSAGE));
                try {
                    InputStream in = getClass().getClassLoader().getResourceAsStream(
                            "com/agac/gui/resourses/reports/" + layout);
                    List<Comprobante> l = new ArrayList<Comprobante>();
                    l.add(comprobante);
                    JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(l);
                    JasperPrint print = JasperFillManager.fillReport(in, null, ds);
                    JasperViewer.viewReport(print, false);


                } catch (JRException ex) {
                    Exceptions.printStackTrace(ex);
                }

            }
        }
    }
    //</editor-fold>

    public boolean validaCampos() {

        boolean valida = true;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        if (txtRazonSocial.getText().trim().equals("")) {
            valida = false;
        }
        if (txtRFC.getText().trim().equals("")) {
            valida = false;
        }

        if (chkDescuento.isSelected()) {
            if (txtDescImporte.getText().trim().equals("")) {
                txtDescImporte.setBackground(Color.YELLOW);
                valida = false;
            } else {
                txtDescImporte.setBackground(txtColonia.getBackground());
            }
        }
        if (optParcial.isSelected() && (txtParcialidad.getText().trim().equals("") || txtParcialidadTotales.getText().trim().equals(""))) {
            valida = false;
        }
        // Verifica si se han ingresado conceptos
        if (model.getRowCount() == 0) {
            valida = false;
        }
        if (chkDescuento.isSelected()) {
            try {
                Double D = Double.parseDouble(txtDescImporte.getText().trim());
            } catch (NumberFormatException nfe) {
                valida = false;
            }
        }
        return valida;
    }

    public void refrescaIva(double iva) {
        if (iva == 0) {
            return;
        }
        Traslado T = new Traslado();
        T.setImpuesto("IVA");
        T.setImporte(new BigDecimal(Double.toString(
                comprobante.calcularSubTotal().doubleValue() * iva)));
        T.setTasa(new BigDecimal(Double.toString(iva)));
        if (impuesto.getTraslados() == null) {
            impuesto.setTraslados(new TreeMap<String, Traslado>());
        }
        impuesto.getTraslados().put("IVA", T);
        comprobante.setImpuesto(impuesto);
        comprobante.setIVA(comprobante.calcularSubTotal().doubleValue() * iva);
        NumberFormat nf = NumberFormat.getCurrencyInstance();
        lblIVA.setText(nf.format(comprobante.getIVA()));
        btnImpuestos.setEnabled(true);
    }

    public void pintaBoton(Concepto cto) {

        if (cto.getCuentaPredial() != null) {
            this.btnCtaPredial.setForeground(ColorBotonTrue);
        } else {
            this.btnCtaPredial.setForeground(ColorBotonFalse);
        }


        if (cto.getInfoAduanera() != null) {
            this.btnInfoAduanera.setForeground(ColorBotonTrue);
        } else {
            this.btnInfoAduanera.setForeground(ColorBotonFalse);
        }

        if (cto.getParte() != null) {
            this.btnPartes.setForeground(ColorBotonTrue);
        } else {
            this.btnPartes.setForeground(ColorBotonFalse);
        }
    }
    DocumentListener listenDescuento = new DocumentListener() {

        @Override
        public void insertUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void removeUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void changedUpdate(DocumentEvent event) {
        }

        public void validar() {

            if (chkDescuento.isSelected()) {

                try {
                    Double D = Double.parseDouble(txtDescImporte.getText().trim());

                    txtDescImporte.setForeground(Color.BLACK);
                    txtDescImporte.setBackground(txtCantidad.getBackground());
                    txtDescImporte.setFont(txtDescImporte.getFont().deriveFont(Font.PLAIN));


                } catch (NumberFormatException nfe) {
                    txtDescImporte.setBackground(Color.YELLOW);
                    txtDescImporte.requestFocus();
                    txtDescImporte.setForeground(Color.RED);
                    txtDescImporte.setFont(txtDescImporte.getFont().deriveFont(Font.BOLD));

                }

            }
        }
    };
    DocumentListener listenParcial = new DocumentListener() {

        @Override
        public void insertUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void removeUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void changedUpdate(DocumentEvent event) {
        }

        public void validar() {

            if (optParcial.isSelected()) {

                if (txtParcialidad.getText().trim().equals("")) {
                    txtParcialidad.setBackground(Color.YELLOW);
                } else {
                    txtParcialidad.setBackground(txtCantidad.getBackground());
                }
                try {

                    int x = Integer.parseInt(txtParcialidad.getText().trim());
                    txtParcialidad.setFont(txtParcialidad.getFont().deriveFont(Font.PLAIN));
                    txtParcialidad.setForeground(Color.BLACK);
                    //firePropertyChange()

                } catch (NumberFormatException nfe) {
                    txtParcialidad.setBackground(Color.YELLOW);
                    txtParcialidad.requestFocus();
                    txtParcialidad.setForeground(Color.RED);
                    txtParcialidad.setFont(txtParcialidad.getFont().deriveFont(Font.BOLD));
                }
            }
        }
    };
    DocumentListener listenParcialTotal = new DocumentListener() {

        @Override
        public void insertUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void removeUpdate(DocumentEvent event) {
            validar();
        }

        @Override
        public void changedUpdate(DocumentEvent event) {
        }

        public void validar() {

            if (optParcial.isSelected()) {

                if (txtParcialidadTotales.getText().trim().equals("")) {
                    txtParcialidadTotales.setBackground(Color.YELLOW);
                } else {
                    txtParcialidadTotales.setBackground(txtCantidad.getBackground());
                }

                try {

                    int x = Integer.parseInt(txtParcialidadTotales.getText().trim());
                    txtParcialidadTotales.setFont(txtParcialidadTotales.getFont().deriveFont(Font.PLAIN));
                    txtParcialidadTotales.setForeground(Color.BLACK);
                    if (x < Integer.parseInt(txtParcialidad.getText().trim())) {
                        throw (new NumberFormatException());
                    }

                } catch (NumberFormatException nfe) {
                    txtParcialidadTotales.setBackground(Color.YELLOW);
                    txtParcialidadTotales.requestFocus();
                    txtParcialidadTotales.setForeground(Color.RED);
                    txtParcialidadTotales.setFont(txtParcialidad.getFont().deriveFont(Font.BOLD));
                }
            }

        }
    };
}
