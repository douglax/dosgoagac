/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LicenciasPanel.java
 *
 * Created on 23/09/2010, 01:43:59 PM
 */

package com.agac.gui;

import com.agac.bo.Emisor;
import javax.swing.table.DefaultTableModel;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

import com.agac.services.StringEncrypter;
import com.agac.services.FileEncrypter;
import java.io.ByteArrayOutputStream;

import com.agac.services.DbServices;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author alejandro.acosta
 */
public class LicenciasPanel extends javax.swing.JPanel {

    /** Creates new form LicenciasPanel */
    public LicenciasPanel() {
        initComponents();
        LlenaCampos();

        validaLicencias();

        //prueba();
    }


    private void prueba(){
        //StringEncrypter.testUsingPassPhrase();
        FileEncrypter.Encrypt("c:\\pruebas\\clave.txt","pasguord");

    }


    private void LlenaCampos(){

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Preferences pref = NbPreferences.forModule(OpcionesdelSistemaPanel.class);

        String licencia = pref.get("LICENCIA", "DEMO");

        //Desencriptar archivo
        
        ByteArrayOutputStream baos = FileEncrypter.Decrypt(licencia,"pasguord");
        if(baos != null){
 
                System.out.println(baos.toString());
                String cadena = baos.toString();
                String remain;

                //Extraemos la fecha primero
                String fecha = cadena.substring(0, cadena.indexOf("\n") );
                txtFecha.setText(fecha);

                remain = cadena.substring(cadena.indexOf("\n") + 1,cadena.length());
                System.out.println("Remain-> " + remain);

                cadena = remain;

                //Extraemos el número de comprobantes
                String numero = cadena.substring(0, cadena.indexOf("\n") );
                txtComprobantes.setText(numero);

                remain = cadena.substring(cadena.indexOf("\n") + 1,cadena.length());
                System.out.println("Remain-> " + remain.trim());

                cadena = remain;

                //Extraemos los RFC y los agregamos a la tabla

                // La cadena remanente debe tener una longitud multiplo de 14
                // ya que cada RFC ocupa 13 posiciones + \n
                // ej.
                // AAAA010101XXX\n
                // BBBB020202YYY\n
                // CCCC030303ZZZ\n
                // El algoritmo se basa en extraer subcadenas de 14 caractéres
                // y sustraer el último

                int cuantos = remain.length() / 14;
                System.out.println(String.valueOf(cuantos) );
                String rfc;
                for (int c=0;c<cuantos;c++) {
                    rfc = cadena.substring(0,13);
                    model.addRow(new Object[] {rfc});
                    cadena = cadena.substring(cadena.indexOf("\n") + 1,cadena.length());

                }

        }
        

        System.out.println("Stop! Hammertime!");
      
    }


    private void validaLicencias()  {
        // Este método valida las licencias obtenidas del archivo
        //compara si existen los registros y si no los agrega a la BD


        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        List<Emisor> lista = null;
        String qry;

        if (model.getRowCount() != 0) {

            //Iterar a través de la tabla y checar VS Db
            for (int c=0;c<model.getRowCount();c++) {
            qry = "Select e from Emisor e where UPPER(e.rfc) = ?1";
            lista = DbServices.getListWithParameters(qry, model.getValueAt(c, 0).toString());
                if (lista.size() > 0 ) {
                    Emisor emi = new Emisor();
                    emi.setRfc(model.getValueAt(c, 0).toString().trim());
                    try {
                        DbServices.saveObject(emi, true);
                    } catch (Exception e) {
                       // throw new Exception("Ocurrio un error al guardar los datos",
                    //e);
                    }
                }



            }//for


        } //if




    } //validaLicencias



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtComprobantes = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Emisores Autorizados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jTable1.columnModel.title0")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jLabel1.text")); // NOI18N

        txtFecha.setEditable(false);
        txtFecha.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.txtFecha.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jLabel2.text")); // NOI18N

        txtComprobantes.setEditable(false);
        txtComprobantes.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.txtComprobantes.text")); // NOI18N

        jScrollPane2.setBorder(null);

        jTextPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.background"));
        jTextPane1.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jTextPane1.text")); // NOI18N
        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtComprobantes))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(87, 87, 87)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtComprobantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField txtComprobantes;
    private javax.swing.JTextField txtFecha;
    // End of variables declaration//GEN-END:variables

}
