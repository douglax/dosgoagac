/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * LicenciasPanel.java
 *
 * Created on 23/09/2010, 01:43:59 PM
 */

package com.agac.gui;

import javax.swing.table.DefaultTableModel;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

import com.agac.services.StringEncrypter;

/**
 *
 * @author alejandro.acosta
 */
public class LicenciasPanel extends javax.swing.JPanel {

    /** Creates new form LicenciasPanel */
    public LicenciasPanel() {
        initComponents();
        LlenaCampos();
        //prueba();
    }


    private void prueba(){
        StringEncrypter.testUsingPassPhrase();
    }


    private void LlenaCampos(){

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Preferences pref = NbPreferences.forModule(OpcionesdelSistemaPanel.class);

        String licencia = pref.get("LICENCIA", "DEMO");

        //Desencriptar cadena
        StringEncrypter encripta = new StringEncrypter("My Pass Phrase");


        String cadena = encripta.decrypt(licencia);
        

//        String cadena = encripta.decrypt(licencia);

        System.out.println("encriptada: " + licencia);
        System.out.println("desencriptada: " + cadena);
        
        //descomponer cadena en elementos y llenar campos

        //El formato de la cadena es el siguiente
        //  fecha#nÃºmero de comprobante@RFC|RFC|RFC|

        //System.out.println("primer evento # -> " + cadena.indexOf("#"));
        //String fecha =cadena.substring(0,cadena.indexOf("#") );
        //System.out.println("fecha-> " + fecha);
        

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtComprobantes = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Emisores Autorizados"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setResizable(false);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jTable1.columnModel.title0")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jLabel1.text")); // NOI18N

        txtFecha.setEditable(false);
        txtFecha.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.txtFecha.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jLabel2.text")); // NOI18N

        txtComprobantes.setEditable(false);
        txtComprobantes.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.txtComprobantes.text")); // NOI18N

        jScrollPane2.setBorder(null);

        jTextPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("Label.background"));
        jTextPane1.setText(org.openide.util.NbBundle.getMessage(LicenciasPanel.class, "LicenciasPanel.jTextPane1.text")); // NOI18N
        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtComprobantes))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(87, 87, 87)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtComprobantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField txtComprobantes;
    private javax.swing.JTextField txtFecha;
    // End of variables declaration//GEN-END:variables

}
