/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReporteMensualPanel.java
 *
 * Created on May 10, 2010, 8:40:40 PM
 */
package com.agac.gui;

import com.agac.bo.Comprobante;
import com.agac.bo.Emisor;
import com.agac.bo.InformacionAduanera;
import java.awt.FileDialog;
import org.openide.windows.WindowManager;
import com.agac.services.DbServices;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.prefs.PreferenceChangeEvent;
import java.util.prefs.PreferenceChangeListener;
import java.util.prefs.Preferences;
import org.openide.util.NbPreferences;

/**
 *
 * @author alex
 */
public class ReporteMensualPanel extends javax.swing.JPanel {

    /** Creates new form ReporteMensualPanel */
    public ReporteMensualPanel() {
        initComponents();


        txtRuta.setText(RutaReportes + "1" + emisor.getRfc() + mesAnumero() + cboAno.getSelectedItem().toString() + ".txt" );

        pref.addPreferenceChangeListener(new PreferenceChangeListener() {

            @Override
            public void preferenceChange(PreferenceChangeEvent evt) {
                if (evt.getKey().equals("RUTAREPORTES")) {
                    RutaReportes = evt.getNewValue();
                }

            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboMes = new javax.swing.JComboBox();
        cboAno = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();

        setToolTipText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.toolTipText")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.jLabel1.text")); // NOI18N

        cboMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        cboMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMesActionPerformed(evt);
            }
        });

        cboAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2010", "2011", "2012", "2013", "2014", "2015" }));
        cboAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAnoActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.jLabel2.text")); // NOI18N

        txtRuta.setEditable(false);
        txtRuta.setText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.txtRuta.text")); // NOI18N

        btnBuscar.setText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.btnBuscar.text")); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnGenerar.setText(org.openide.util.NbBundle.getMessage(ReporteMensualPanel.class, "ReporteMensualPanel.btnGenerar.text")); // NOI18N
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRuta, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboMes, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar, 0, 0, Short.MAX_VALUE)
                    .addComponent(cboAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:



        FileDialog fd = new FileDialog(WindowManager.getDefault().getMainWindow(),
                "Archivo de reporte", FileDialog.SAVE);
        fd.setFile("*.txt");
        fd.setDirectory(RutaReportes);
        fd.setVisible(true);

        RutaReportes = fd.getDirectory();

        txtRuta.setText(RutaReportes + "1" + emisor.getRfc() + mesAnumero() + cboAno.getSelectedItem().toString() + ".txt");


    }//GEN-LAST:event_btnBuscarActionPerformed



    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        // TODO add your handling code here:

        String linea = "";
        String qryIA = "";

        ArrayList<String> lstPedimento = new ArrayList<String>();
        ArrayList<String> lstFecha = new ArrayList<String>();
        ArrayList<String> lstAduana = new ArrayList<String>();

        String concatPedimento = "";
        String concatFecha = "";
        String concatAduana = "";


        List<Comprobante> results = null;
        List<InformacionAduanera> infoAduanera = null;
        results = DbServices.getComprobantesDelMes(emisor.getRfc(), cboMes.getSelectedIndex() + 1, Integer.parseInt(cboAno.getSelectedItem().toString()));

        if (results.isEmpty()) {
            // Mensaje no hay registros
        } else {

            try {
                // crear archivo
                FileWriter outFile = new FileWriter(txtRuta.getText());
                PrintWriter out = new PrintWriter(outFile);


                // Recorremos los resultados y los escribimos al archivo
                for (Iterator it = results.iterator(); it.hasNext();) {
                    Vector resultRow = (Vector) it.next();


                    linea = "|";
                    linea += resultRow.elementAt(0);                    //RFC
                    linea += "|" + resultRow.elementAt(1);              //Serie
                    linea += "|" + resultRow.elementAt(2).toString();   //folio
                    linea += "|" + resultRow.elementAt(3).toString();   //NoAprobacion
                    linea += "|" + resultRow.elementAt(4).toString();   //fecha
                    linea += "|" + resultRow.elementAt(5).toString();   //monto
                    linea += "|" + resultRow.elementAt(6);             //IVA
                    linea += "|" + resultRow.elementAt(7);             //Estado del comprobante

                    // buscamos registros de información aduanera del concepto

                    qryIA = "Select i from InformacionAduanera i JOIN i.Concepto_InformacionAduanera x " +
                            "JOIN x.Conceptos p JOIN p.ComprobanteConcepto k " +
                            "JOIN k.Comprobante c WHERE c.ID= ?1";
                    infoAduanera = DbServices.getListWithParameters(qryIA, resultRow.elementAt(8).toString());

                    if (infoAduanera.isEmpty()) {
                        linea += "|||";
                    } else {

                        lstPedimento.clear() ;
                        lstFecha.clear();
                        lstAduana.clear();

                        // Recorremos Información Aduanera para llenar las listas
                        for(InformacionAduanera i : infoAduanera){
                           lstPedimento.add(i.getNumero());
                           lstFecha.add(i.getFecha().toString());
                           lstAduana.add(i.getAduana());
                        }

                        // Recorremos las listas recien creadas para completar la línea

                        concatPedimento = "";
                        for(String i : lstPedimento) {
                            concatPedimento +=  i + ",";
                        }
                        // Remover la última coma
                        concatPedimento = concatPedimento.substring(0,concatPedimento.length()-1);

                        concatFecha = "";
                        for(String i : lstFecha) {
                            concatFecha +=  i + ",";
                        }
                        concatFecha = concatFecha.substring(0,concatFecha.length()-1);

                        concatAduana = "";
                        for(String i : lstAduana) {
                            concatAduana +=  i + ",";
                        }
                        concatAduana = concatAduana.substring(0,concatAduana.length()-1);

                        //juntamos los valores y los agregamos a linea
                        linea += "|" + concatPedimento + "|" + concatFecha + "|" + concatAduana;

                    }

                    //cerramos linea y la escribimos
                    linea += "|";
                    out.println(linea);

                }

                out.close();
            } catch (IOException e) {
                System.out.println(e.getMessage());
            }

        } //if

    }//GEN-LAST:event_btnGenerarActionPerformed

    private void cboMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMesActionPerformed
        // TODO add your handling code here:

        txtRuta.setText(RutaReportes + "1" + emisor.getRfc() + mesAnumero() + cboAno.getSelectedItem().toString() + ".txt" );

    }//GEN-LAST:event_cboMesActionPerformed

    private void cboAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAnoActionPerformed
        // TODO add your handling code here:

        txtRuta.setText(RutaReportes + "1" + emisor.getRfc() + mesAnumero() + cboAno.getSelectedItem().toString() + ".txt" );
    }//GEN-LAST:event_cboAnoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JComboBox cboAno;
    private javax.swing.JComboBox cboMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables

    private Emisor emisor = new Emisor();
    Preferences pref = NbPreferences.forModule(OpcionesdelSistemaPanel.class);
    String RutaReportes = pref.get("RUTAREPORTES", "");

    public Emisor getEmisor() {
        return emisor;
    }

    public void setEmisor(Emisor emisor) {
        this.emisor = emisor;
    }

    public String mesAnumero() {
        String mes = "";
        if (cboMes.getSelectedIndex() == 0) {
            mes = "01";
        }
        if (cboMes.getSelectedIndex() == 1) {
            mes = "02";
        }
        if (cboMes.getSelectedIndex() == 2) {
            mes = "03";
        }
        if (cboMes.getSelectedIndex() == 3) {
            mes = "04";
        }
        if (cboMes.getSelectedIndex() == 4) {
            mes = "05";
        }
        if (cboMes.getSelectedIndex() == 5) {
            mes = "06";
        }
        if (cboMes.getSelectedIndex() == 6) {
            mes = "07";
        }
        if (cboMes.getSelectedIndex() == 7) {
            mes = "08";
        }
        if (cboMes.getSelectedIndex() == 8) {
            mes = "09";
        }
        if (cboMes.getSelectedIndex() == 9) {
            mes = "10";
        }
        if (cboMes.getSelectedIndex() == 10) {
            mes = "11";
        }
        if (cboMes.getSelectedIndex() == 11) {
            mes = "12";
        }

        return mes;

    }
}
